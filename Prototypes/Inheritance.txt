Circle Class 
with one method computeOptimumLocation()

Square Class
with one method computeOptimumLocation()

this is bad as if there is a bug in computeOptimumLocation since 
its defined twice there is gonna be an issue in both classes and 
you have to go int oboth and fix them individually.



Instead a better solution is through using inheritance

create a shape class (aka base/super/parent)
and have the circle and square inherit from it


Two types of classes Classical and Prototypical
classical is because of classes (doesnt really apply to JS)
Prototypical applies more to JS

A prototype is a parent so every object has a prototype or parent escept the root object

Every object we create in JS either directly or indirectly inherits from object base
object base is the root of all objects in javascript and it doesnt have prototype or parent


All Objects created by a given constructor will have the same prototype.
All circles created by the circle constructor will have the same prototype.
All arrays created by the array constructor will have the same prototype.

This is how the tree looks like:

                                --- inherits from objectBase
        inherits from circleBase
Circle --